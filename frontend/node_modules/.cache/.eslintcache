[{"/Users/jerome/Desktop/dev/react-mesto-auth/src/index.js":"1","/Users/jerome/Desktop/dev/react-mesto-auth/src/reportWebVitals.js":"2","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/App.js":"3","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Footer.js":"4","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Main.js":"5","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Header.js":"6","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/PopupAddCard.js":"7","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/PopupUpdateAvatar.js":"8","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Register.js":"9","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/ImagePopup.js":"10","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/PopupEditProfile.js":"11","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Login.js":"12","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/InfoTooltip.js":"13","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/RequireAuth.js":"14","/Users/jerome/Desktop/dev/react-mesto-auth/src/utils/Api.js":"15","/Users/jerome/Desktop/dev/react-mesto-auth/src/utils/auth.js":"16","/Users/jerome/Desktop/dev/react-mesto-auth/src/contexts/CurrentUserContext.js":"17","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/PopupWithForm.js":"18","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Card.js":"19"},{"size":626,"mtime":1640208118677,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1637011655302,"results":"22","hashOfConfig":"21"},{"size":8519,"mtime":1640363457415,"results":"23","hashOfConfig":"21"},{"size":220,"mtime":1637062357607,"results":"24","hashOfConfig":"21"},{"size":2018,"mtime":1639480516693,"results":"25","hashOfConfig":"21"},{"size":1021,"mtime":1640214739194,"results":"26","hashOfConfig":"21"},{"size":1422,"mtime":1640363408007,"results":"27","hashOfConfig":"21"},{"size":1056,"mtime":1639438410522,"results":"28","hashOfConfig":"21"},{"size":1162,"mtime":1640215484447,"results":"29","hashOfConfig":"21"},{"size":853,"mtime":1637062752277,"results":"30","hashOfConfig":"21"},{"size":1663,"mtime":1640363387620,"results":"31","hashOfConfig":"21"},{"size":1020,"mtime":1640215507002,"results":"32","hashOfConfig":"21"},{"size":651,"mtime":1640212900770,"results":"33","hashOfConfig":"21"},{"size":222,"mtime":1640215495629,"results":"34","hashOfConfig":"21"},{"size":2515,"mtime":1639437018678,"results":"35","hashOfConfig":"21"},{"size":1124,"mtime":1640219710613,"results":"36","hashOfConfig":"21"},{"size":84,"mtime":1639421051963,"results":"37","hashOfConfig":"21"},{"size":685,"mtime":1639436417667,"results":"38","hashOfConfig":"21"},{"size":1708,"mtime":1639480368638,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f87anu",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jerome/Desktop/dev/react-mesto-auth/src/index.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/reportWebVitals.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/App.js",["79"],"import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupUpdateAvatar from \"./PopupUpdateAvatar\";\nimport PopupEditProfile from \"./PopupEditProfile\";\nimport PopupAddCard from \"./PopupAddCard\";\nimport ImagePopup from \"./ImagePopup\";\nimport api from \"../utils/Api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { Route, Routes, Navigate, useNavigate } from \"react-router-dom\";\nimport RequireAuth from \"./RequireAuth\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport * as auth from \"../utils/auth\";\nimport InfoTooltip from \"./InfoTooltip\";\nimport iconAppruve from \"../images/iconAppruve.svg\";\nimport iconErr from \"../images/iconErr.svg\";\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n  const [isInfoTooltipOpen, setIsTooltipOpen] = React.useState(false);\n\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [email, setEmail] = React.useState(\"\");\n  const [messagePopup, setMessagePopup] = React.useState({\n    icon: \"\",\n    text: \"\",\n  });\n  const jwt = localStorage.getItem(\"jwt\");\n  const nav = useNavigate();\n\n  //описание авторизации\n  function onLogin({ password, email }) {\n    return auth\n      .signin({ password, email })\n      .then((data) => {\n        //если получили токен и авторизация прошла успешно\n        //то открывается окно подтверждения и переадресовывает на главную страницу\n\n        if (data.token) {\n          handleInfoTooltipOpen({\n            icon: iconAppruve,\n            text: \"Вы успешно авторизовались!\",\n          });\n          handleIsTooltipOpen();\n          setEmail(email);\n          setLoggedIn(true);\n          localStorage.setItem(\"jwt\", data.token);\n          localStorage.setItem(\"email\", email);\n          nav(\"/\");\n        } else {\n          handleInfoTooltipOpen({\n            icon: iconErr,\n            text: \"Что-то пошло не так! Попробуйте ещё раз.\",\n          });\n          handleIsTooltipOpen();\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  //описание регистрации\n  function onRegister({ password, email }) {\n    return auth\n      .signup({ password, email })\n      .then((data) => {\n        if (data.data._id) {\n          handleInfoTooltipOpen({\n            icon: iconAppruve,\n            text: \"Вы успешно зарегистрировались!\",\n          });\n          handleIsTooltipOpen();\n          nav(\"/sign-in\");\n        }\n      })\n      .catch((err) => {\n        handleInfoTooltipOpen({\n          icon: iconErr,\n          text: \"Что-то пошло не так! Попробуйте ещё раз.\",\n        });\n        handleIsTooltipOpen();\n        console.log(err);\n      });\n  }\n\n  //состояние данных подтверждения регистрации\n  function handleInfoTooltipOpen({ icon, text }) {\n    setMessagePopup({ icon, text });\n  }\n\n  //выход\n  function handleSignOut() {\n    setLoggedIn(false);\n    localStorage.removeItem(\"jwt\");\n    localStorage.removeItem(\"email\");\n    setEmail(\"\");\n    nav(\"/sign-in\");\n  }\n\n  React.useEffect(() => {\n    if (jwt) {\n      auth\n        .checkToken(jwt)\n        .then((data) => {\n          if (data.data) {\n            setEmail(data.data.email);\n            setLoggedIn(true);\n            nav(\"/\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (loggedIn) {\n      api\n        .getUserData()\n        .then((data) => {\n          setCurrentUser(data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [loggedIn]);\n\n  React.useEffect(() => {\n    if (loggedIn) {\n      api\n        .getCardsData()\n        .then((data) => {\n          setCards(data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [loggedIn]);\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\n\n    api\n      .changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n        setCards((state) =>\n          state.map((c) => (c._id === card._id ? newCard : c))\n        );\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleCardDelete(card) {\n    api\n      .deleteCard(card._id)\n      .then(() => {\n        const newCard = cards.filter((c) => c !== card);\n        setCards(newCard);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setSelectedCard({ isOpen: false });\n    setIsTooltipOpen(false);\n  }\n\n  function handleIsTooltipOpen() {\n    setIsTooltipOpen(true);\n  }\n\n  function handleCardClick(card) {\n    card.isOpen = !card.isOpen;\n    setSelectedCard(card);\n  }\n\n  function handleUpdateUser({ name, about }) {\n    api\n      .updateUserData({ name, about })\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleUpdateAvatar({ avatar }) {\n    api\n      .updateAvatar(avatar)\n      .then((data) => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  function handleAddPlaceSubmit({ name, link }) {\n    api\n      .addCard({ name, link })\n      .then((newCard) => {\n        setCards([newCard, ...cards]);\n        closeAllPopups();\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n        <Header\n          loggedIn={loggedIn}\n          email={email}\n          handleSignOut={handleSignOut}\n        />\n        <Routes>\n          <Route\n            path=\"/sign-up\"\n            element={<Register onRegister={onRegister} />}\n          />\n          <Route path=\"/sign-in\" element={<Login onLogin={onLogin} />} />\n          <Route\n            exact\n            path=\"/\"\n            element={\n              !loggedIn ? <Navigate to=\"/sign-in\" /> : <Navigate to=\"/main\" />\n            }\n          />\n          <Route\n            path=\"/main\"\n            element={\n              <RequireAuth loggedIn={loggedIn}>\n                <Main\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onEditAvatar={handleEditAvatarClick}\n                  onCardClick={handleCardClick}\n                  cards={cards}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                />\n              </RequireAuth>\n            }\n          />\n        </Routes>\n        <PopupUpdateAvatar\n          isOpen={isEditAvatarPopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateAvatar}\n          buttonText=\"Сохранить\"\n        />\n        <PopupEditProfile\n          isOpen={isEditProfilePopupOpen}\n          onClose={closeAllPopups}\n          onUpdateUser={handleUpdateUser}\n          buttonText=\"Сохранить\"\n        />\n        <PopupAddCard\n          isOpen={isAddPlacePopupOpen}\n          onClose={closeAllPopups}\n          onAddPlace={handleAddPlaceSubmit}\n          buttonText=\"Сохранить\"\n        />\n        <ImagePopup card={selectedCard} onClose={closeAllPopups} />\n        <InfoTooltip\n          onClose={closeAllPopups}\n          isOpen={isInfoTooltipOpen}\n          messagePopup={messagePopup}\n        />\n        <Footer />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Footer.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Main.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Header.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/PopupAddCard.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/PopupUpdateAvatar.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Register.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/ImagePopup.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/PopupEditProfile.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Login.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/InfoTooltip.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/RequireAuth.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/utils/Api.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/utils/auth.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/contexts/CurrentUserContext.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/PopupWithForm.js",[],"/Users/jerome/Desktop/dev/react-mesto-auth/src/components/Card.js",[],{"ruleId":"80","severity":1,"message":"81","line":123,"column":6,"nodeType":"82","endLine":123,"endColumn":8,"suggestions":"83"},"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'jwt' and 'nav'. Either include them or remove the dependency array.","ArrayExpression",["84"],{"desc":"85","fix":"86"},"Update the dependencies array to be: [jwt, nav]",{"range":"87","text":"88"},[3706,3708],"[jwt, nav]"]